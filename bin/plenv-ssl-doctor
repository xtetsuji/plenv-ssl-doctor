#!/bin/bash

set -eu

declare PLENV_DEBUG
if [ -n "$PLENV_DEBUG" ] ; then
    set -x
fi

function install-net-ssleay {
    if perl -MNet::SSLeay -e 1 >/dev/null 2>&1 ; then
        echo "Already installed Net::SSLeay?"
        echo "If you want to reinstall Net::SSLeay,"
        echo "then type \"cpanm --uninstall Net::SSLeay\" for uninstall."
        return
    fi

    if ! type cpanm >/dev/null ; then
        echo "Please install cpanm command"
        echo "plenv install-cpanm"
        return
    fi

    echo "=== install Crypt::OpenSSL::Guess ==="
    cpanm Crypt::OpenSSL::Guess

    # see: https://blog.akiym.com/entry/2018/12/15/233330
    RESOLVED_OPENSSL_PREFIX=$( perl -MCrypt::OpenSSL::Guess -e 'print find_openssl_prefix()' )
    if [ -z "$RESOLVED_OPENSSL_PREFIX" ] ; then
        echo "failed guess OPENSSL_PREFIX by Crypt::OpenSSL::Guess"
        return 1
    fi
    echo "resolved OPENSSL_PREFIX as $RESOLVED_OPENSSL_PREFIX"

    echo "=== install Net::SSLeay by OPENSSL_PREFIX=$RESOLVED_OPENSSL_PREFIX ==="
    OPENSSL_PREFIX="$RESOLVED_OPENSSL_PREFIX" \
        cpanm Net::SSLeay

    echo "Congratulations! Net::SSLeay is installed!"
}

function install-io-socket-ssl {
    if perl -MIO::Socket::SSL -e 1 >/dev/null 2>&1 ; then
        # 浮動小数点比較で大丈夫かな？
        if ! perl -MIO::Socket::SSL -e 'my $v = $IO::Socket::SSL::VERSION if ( $v < 1.42 ) { die "IO::Socket::SSL version is too old ($v)"; }' ; then
            return 1
        else
            echo "Already installed IO::Socket::SSL?"
            echo "If you want to reinstall IO::Socket::SSL,"
            echo "then type \"cpanm --uninstall IO::Socket::SSL\" for uninstall."
            return
        fi
    fi

    if ! type cpanm >/dev/null ; then
        echo "Please install cpanm command"
        echo "plenv install-cpanm"
        return
    fi

    echo "=== install IO::Socket::SSL ==="
    cpanm IO::Socket::SSL
}

function check-io-socket-ssl {
    if perl -MIO::Socket::SSL -e 1 >/dev/null 2>&1 ; then
        perl -MIO::Socket::SSL -le 'print $IO::Socket::SSL::VERSION'
    else
        echo "It seems that IO::Socket::SSL is not installed" >&2
        return 1
    fi
}

function main {
    arg=${1:-}
    shift || true
    case "$arg" in
        install-net-ssleay)
            install-net-ssleay "$@"
            ;;
        install-io-socket-ssl)
            install-io-socket-ssl "$@"
            ;;
        check-io-socket-ssl)
            check-io-socket-ssl "$@"
            ;;
        ""|*)
            echo "Usage:"
            echo "  plenv ssl-doctor [install-net-ssleay|install-io-socket-ssl|check-io-socket-ssl]"
            ;;
    esac
}

main "$@"
